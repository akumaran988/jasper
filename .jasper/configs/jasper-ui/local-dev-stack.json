{
  "llmProvider": "google-ai",
  "model": "gemini-2.5-flash-lite", 
  "maxIterations": 12,
  "tokenLimit": 15000,
  "apiThrottleMs": 2000,
  "mcpServers": {
    "local-services": {
      "mode": "local",
      "autoStart": true,
      "httpUrl": "http://localhost:8081/mcp/tools",
      "description": "Local service management",
      "trust": true,
      "timeout": 30000,
      "serverConfig": {
        "port": 8081,
        "env": {
          "NODE_ENV": "development",
          "LOG_LEVEL": "info"
        }
      }
    }
  },
  "serviceDefinitions": {
    "backend-api": {
      "mcpServer": "local-services",
      "config": {
        "name": "backend-api",
        "type": "process",
        "command": "npm",
        "args": ["run", "dev"],
        "workingDir": "./backend",
        "env": {
          "NODE_ENV": "development",
          "PORT": "3001",
          "DATABASE_URL": "postgresql://dev:devpass@localhost:5433/appdb"
        },
        "healthCheck": {
          "url": "http://localhost:3001/api/health",
          "interval": 30
        },
        "autoRestart": true,
        "restartDelay": 3
      }
    },
    "frontend-dev": {
      "mcpServer": "local-services",
      "config": {
        "name": "frontend-dev",
        "type": "process",
        "command": "npm",
        "args": ["run", "dev"],
        "workingDir": "./frontend",
        "env": {
          "NODE_ENV": "development",
          "PORT": "3000",
          "REACT_APP_API_URL": "http://localhost:3001"
        },
        "healthCheck": {
          "url": "http://localhost:3000",
          "interval": 30
        },
        "autoRestart": true
      }
    },
    "postgres-db": {
      "mcpServer": "local-services",
      "config": {
        "name": "postgres-db",
        "type": "docker",
        "image": "postgres:15",
        "ports": {
          "5433": "5432"
        },
        "volumes": {
          "./data/postgres": "/var/lib/postgresql/data"
        },
        "env": {
          "POSTGRES_DB": "appdb",
          "POSTGRES_USER": "dev",
          "POSTGRES_PASSWORD": "devpass"
        },
        "healthCheck": {
          "command": "pg_isready -U dev",
          "interval": 20
        },
        "autoRestart": true
      }
    },
    "redis-cache": {
      "mcpServer": "local-services",
      "config": {
        "name": "redis-cache",
        "type": "docker",
        "image": "redis:7-alpine",
        "ports": {
          "6380": "6379"
        },
        "volumes": {
          "./data/redis": "/data"
        },
        "healthCheck": {
          "command": "redis-cli ping",
          "interval": 15
        },
        "autoRestart": true
      }
    }
  },
  "deploymentProfiles": {
    "full-stack": {
      "description": "Complete development stack",
      "services": ["postgres-db", "redis-cache", "backend-api", "frontend-dev"],
      "parallel": false,
      "autoStart": true
    },
    "backend-only": {
      "description": "Backend services only",
      "services": ["postgres-db", "redis-cache", "backend-api"],
      "parallel": false,
      "autoStart": false
    },
    "databases-only": {
      "description": "Database services only",
      "services": ["postgres-db", "redis-cache"],
      "parallel": true,
      "autoStart": false
    }
  }
}